name: Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-1
  GKE_ZONE: asia-northeast3-c
  REQUEST_SERVICE_PROJECT_PATH: containers/request-service
  REQUEST_DEPLOYMENT_NAME: request
  REQUEST_SERVICE_IMAGE: gke-request-service
  RESPONSE_SERVICE_PROJECT_PATH: containers/response-service
  RESPONSE_DEPLOYMENT_NAME: response
  RESPONSE_SERVICE_IMAGE: gke-response-service

jobs:
  request-service-setup-build-publish-deploy:
    name: request-service-setup-build-publish-deploy
    runs-on: ubuntu-latest

    steps:

      # Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up openjdk-11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.8

      - name: maven package
        run: mvn -B clean package --file containers/request-service/pom.xml

      # Setup Google Cloud CLI
      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      - run: |-
          gcloud --quiet auth configure-docker

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@v0.2.1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      # Build the Docker image
      - name: Build
        run: |-
          docker build \
            --tag "gcr.io/$PROJECT_ID/$REQUEST_SERVICE_IMAGE:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            $REQUEST_SERVICE_PROJECT_PATH/.

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "gcr.io/$PROJECT_ID/$REQUEST_SERVICE_IMAGE:$GITHUB_SHA"

      # Set up  Kustomize
      - name: Set up Kustomize
        run: |-
          cd $REQUEST_SERVICE_PROJECT_PATH
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          cd $REQUEST_SERVICE_PROJECT_PATH
          ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$REQUEST_SERVICE_IMAGE:$GITHUB_SHA
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$REQUEST_DEPLOYMENT_NAME
          kubectl get services -o wide

  response-service-setup-build-publish-deploy:
    name: response-service-setup-build-publish-deploy
    runs-on: ubuntu-latest

    steps:

      # Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up openjdk-11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.8

      - name: maven package
        run: mvn -B clean package --file containers/response-service/pom.xml

      # Setup Google Cloud CLI
      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      - run: |-
          gcloud --quiet auth configure-docker

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@v0.2.1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      # Build the Docker image
      - name: Build
        run: |-
          docker build \
            --tag "gcr.io/$PROJECT_ID/$RESPONSE_SERVICE_IMAGE:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            $RESPONSE_SERVICE_PROJECT_PATH/.

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "gcr.io/$PROJECT_ID/$RESPONSE_SERVICE_IMAGE:$GITHUB_SHA"

      # Set up  Kustomize
      - name: Set up Kustomize
        run: |-
          cd $RESPONSE_SERVICE_PROJECT_PATH
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          cd $RESPONSE_SERVICE_PROJECT_PATH
          ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$RESPONSE_SERVICE_IMAGE:$GITHUB_SHA
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$RESPONSE_DEPLOYMENT_NAME
          kubectl get services -o wide